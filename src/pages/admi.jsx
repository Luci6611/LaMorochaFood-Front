import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import Cookies from 'universal-cookie';
import { Table } from 'react-bootstrap';
import swal from 'sweetalert';
import { createMenu, eliminarMenus, putMenus, traerCategorias, traerMenus } from '@/helpers/admi';


const admi = () => {


  const [token, setToken] = useState(false);
  const [edit, setEdit] = useState(false);
  const [menus, setMenus] = useState([]);
  const [categorias, setCategorias] = useState([]);
  const [menusEditados, setMenusEditados] = useState([]);


  const traerData = async () => {
    const response = await traerMenus();
    const responseCate = await traerCategorias();
    setMenus(response);
    setCategorias(responseCate);
    console.log(categorias);
  };

  const eliminarMenu = (id) => {
    swal({
      title: "Esta seguro?",
      text: "Esta accion es inrreversible!",
      icon: "warning",
      buttons: true,
      dangerMode: true,
    })
      .then((willDelete) => {
        if (willDelete) {
          console.log(4);
          swal("Menu eliminada con Exito!", {
            icon: "success",
          });
          eliminarMenus(id);
        } else {
          swal("Operacion cancelada con exito!", {
            icon: "success",

          });
        }
      });
  };

  const editarMenus = (datos) => {
    setEdit(true);
    setMenusEditados(datos);
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setMenusEditados((prevState) => ({ ...prevState, [name]: value }));
    console.log(menusEditados);
  };

  const cookies = new Cookies();

  useEffect(() => {

    if (cookies.get("token")) {
      setToken(true);
    }

    traerData();

  }, [eliminarMenu, menusEditados]);



  return (
    <>
      <Head>
        <title>La Morocha - Admi</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="styles-sheets" href="../stylescomponents.css" />
      </Head>

      {
        token ?
          <main className='container  p-3'>

            <h1 className='text-center'> Administrar Menus</h1>
            <Table striped responsive bordered hover variant="dark" className='mt-3'>
              <thead>
                <tr>
                  <th>Id</th>
                  <th>Nombre</th>
                  <th>Descripcion</th>
                  <th>Imagen</th>
                  <th>Precio</th>

                  {edit ? <></> :
                    <th>Estado</th>
                  }
                  <th>Categoria</th>
                  <th>Opciones</th>
                </tr>
              </thead>
              <tbody>

                {

                  edit ?
                    <>

                      <tr key={menus._id}>
                        <td> <input type="text" name="_id" id="" disabled value={menusEditados._id} /></td>
                        <td> <input type="text" onChange={handleChange} name="nombre" id="" value={menusEditados.nombre} required /></td>
                        <td> <input type="text" onChange={handleChange} name="descripcion" id="" value={menusEditados.descripcion} /></td>
                        <td><img src={menusEditados.img} alt={menusEditados.titulo} /></td>
                        <td> $ <input type="number" name="precio" id="" onChange={handleChange} value={menusEditados.precio} /></td>
                        <td>
                          <select name="categoria" id="" onChange={handleChange}>
                            {categorias.map(index => (
                              <option value={index._id} key={index.nombre}>{index.nombre}</option>
                            )
                            )

                            }
                          </select>
                        </td>
                        <td> <button className='btn btn-success fw-bold' onClick={() => putMenus(menusEditados)}>Guardar</button>

                          <button className='btn btn-danger fw-bold' onClick={() => setEdit(false)}>Cancelar</button>
                        </td>

                      </tr>
                    </>

                    :
                    menus.map(index => (
                      <tr key={index._id}>
                        <td>{index._id}</td>
                        <td>{index.nombre}</td>
                        <td>{index.descripcion}</td>
                        <td><img src={index.img} alt={index.titulo} /></td>
                        <td>$ {index.precio}</td>
                        <td>{index.disponible === true ? "Disponible" : "No Disponible"}</td>
                        <td>{index.categoria.nombre}</td>
                        <td> <button className='btn btn-success fw-bold' onClick={() => editarMenus(index)}>editar</button>
                          <button className='btn btn-danger fw-bold ' onClick={() => eliminarMenu(index._id)}>eliminar</button>
                        </td>

                      </tr>


                    ))
                }
              </tbody>
            </Table>


            {!edit ? <>
              <h2 className="text-center">Crear Menu</h2>

              <Table striped responsive bordered hover variant="dark" className='mt-3'>
                <thead>
                  <tr>
                    <th>Nombre</th>
                    <th>Descripcion</th>
                    <th>Imagen</th>
                    <th>Precio</th>
                    <th>Estado</th>
                    <th>Categoria</th>
                    <th>Opciones</th>
                  </tr>
                </thead>
                <tbody>
                  <tr key={menus._id}>
                    <td> <input type="text" onChange={handleChange} name="nombre" required id="" value={menusEditados.nombre} /></td>
                    <td> <input type="text" onChange={handleChange} name="descripcion" id="" value={menusEditados.descripcion} /></td>
                    <td> <input type="file" name="img" id="" /></td>
                    <td><input type="number" name="precio" id="" onChange={handleChange} value={menusEditados.precio} /></td>
                    <td>

                      <select name="disponible" id="" onChange={handleChange} required>
                        <option value="false">No Disponible</option>
                        <option value="true">Disponible</option>

                      </select>
                    </td>
                    <td>

                      <select name="categoria" id="" onChange={handleChange}>
                        <option value="">Seleccione una categoria</option>
                        {
                          categorias.map(index => (
                            <option className='text-black' value={index._id} key={index.nombre}>{index.nombre}</option>
                          ))
                        }

                      </select>
                    </td>
                    <td> <button className='btn btn-success fw-bold' onClick={() => createMenu(menusEditados)}>Crear</button>
                    </td>

                  </tr>
                </tbody>
              </Table>
            </> : <></>
            }
          </main>
          : <></>
      }



    </>
  )
}

export default admi